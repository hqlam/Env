# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

#export PS1="\u@\h:\w\\$ "

# User specific aliases and functions
# Constants
date_dir=`date '+%Y-%m-%d'`

# this directory is from the remote venue machine.
staging=/home/zadmin/mws_staging

#21nasbuildstore.cluster-2003.wherenet.com== 192.168.30.240
#21nasmwstore.cluster-2003.wherenet.com== 192.168.30.243
#sudo mount -t cifs //21nasmwstore.cluster-2003.wherenet.com/Public -o username=builduser,passsword=builduser@1 /mnt/windows
#sudo mount -t cifs //192.168.30.243/Public -o username=builduser,passsword=builduser@1 /mnt/windows

# this directory is a mount directory
 alias cddst='cd /mnt/windows/Data/MotionWorks/mws_staging/ && ll -s * '
#dst=/mnt/windows/Data/MotionWorks/mws_staging/$date_dir/$machine_name
 #dbo="20141126_QA_hl.30_boeing_1.0.0.27.txt"
 dbo="20150421_noc2_boeing_1.0.0.39.txt"        
 pbo="boeing_1.0.0.39"
 alias edbo='cowsay $dbo'
 alias epbo='echo $pbo'
 iphub="192.168.30.14"
 ip159="192.168.30.159"
 ip59="192.168.30.59"
 alias node07=$ip59
 ip44="10.21.1.44"
 ip92="192.168.30.92"
 ipc="10.21.2.29"
 ipt="10.21.2.30"

 #tF1cfg="/opt/zebra/zebra-boeing/common/boeing_standalone.config"
 #tF2tag="/opt/zebra/zebra-boeing/common/boeing_standalone_tag_positions.csv"
 #tF3tentity="/opt/zebra/zebra-boeing/common/boeing_standalone_entity.json"
 #tF4model="/opt/zebra/zebra-boeing/common/models.json"
 #tresourcePath="/opt/zebra/zebra-boeing/common/resources" 
 alias cdlbk="cd /cygdrive/c/Users/hlam/Documents/Virtual\ Machines/CentOS\ 64-bit_HL/HLcopyMW/;p"
 
 alias cdmwsb='cd  /home/zadmin/mws_boeing/; p '
 alias cdzsupp='cd /home/zadmin/zebra_support/; p '
 alias cdttest='cd /home/zadmin/zebra_support/test; p '

 tzbo="/opt/zebra/zebra-boeing"
 tzdp="/opt/zebra/zebra-datapump"
 alias cdtbo='cd   $tzbo;  p '
 alias cdtdp='cd   $tzdp ; p '

 alias cdoz='cd    /opt/zebra/ ;ls -ltra '
 alias cdozv='cd    /opt/zebra_versions             ; p '
 alias cddi='cd    /opt/zebra/zebra_deployment_info/; p '
 alias cdscri='cd  /opt/zebra/zebra-boeing/scripts/; p '

 alias headdi='(cd /opt/zebra/zebra_deployment_info/ && head depl* && pwd && ls -l) || ( cd ~/checkouts/zebra-qa/temp/ && pwd && ls -ltr && head depl*)  '
 alias headzv='(cd /opt/zebra_versions/ && head deploy_sum* && tail -15 deploy_info* && pwd && ls -l) || ( cd ~/checkouts/zebra-qa/temp/ && pwd && ls -ltr && head deploy_sum* && tail -15 deploy_info* )  '

 alias verdep='headzv; sups; pog; catver '

 alias lastdep='cd ~/checkouts/zebra-qa/temp;head deploy_*txt; ls -ltr; pwd'
#lastdept () { if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; ssh zadmin@$ip "cd /opt/zebra/zebra_deployment_info/; head depl* ; ls -ltr " ; }
lastdept () { if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; ssh zadmin@$ip "cd /opt/zebra_versions/; head depl* ; ls -ltr " ; }

 alias cdco='cd     ~/checkouts/      && ls -latr && pwd '
 alias cdpbo='cd    ~/checkouts/$pbo/ && ls -latr && pwd '
 #alias morever='cdpbo && more zebra-common/version.txt; echo '

 alias cdcap='cd    ~/checkouts/zebra-qa/capability_projs; ll; pwd;date '
 alias cdsupp='cd   ~/checkouts/zebra-qa/support; ll; pwd;date '
 alias cdtool='cd   ~/checkouts/zebra-qa/tools; ll; pwd;date '
 alias cddoc='cd    ~/checkouts/zebra-qa/docs; ll; pwd;date '
 alias cdwh='cd     ~/checkouts/zebra-qa/work/hlam; ll; pwd;date '

 #alias cdreq='cd    ~/checkouts/zebra-qa/deployments/requests ; llr; pwd; date '
 alias cddep='cd    ~/checkouts/zebra-qa/deployments && ls && pwd && edbo && date '
 alias catdep='cddep; head -30 $dbo'

 alias cdsw='cd     ~/checkouts/zebra-qa/sw_releases ; ls; pwd; date '
 alias eswf="echo   ~/checkouts/zebra-qa/sw_releases/$pbo.txt"
 alias catsw='edbo; epbo; eswf; eswf|xcat '
 
 alias cdrel='cd    ~/checkouts/$pbo/zebra_release_info ; p '
 alias catrel='head deploy_summary.txt|grep -C1 Release; ll deploy_summary.txt |cut -d" " -f6-9|grep -E ".*:" '

 hbf="hosts_boeing_qa" 
 hnf="hosts_nfl_qa" 
 alias ehbf="echo   ~/checkouts/zebra-qa/deployments/inventories/$hbf"
 alias ehnf="echo   ~/checkouts/zebra-qa/deployments/inventories/$hnf"
 alias cathbf='ehbf; ehbf|xcat'
 alias cathnf='ehnf; ehnf|xcat'
 alias cdinv='cd    ~/checkouts/zebra-qa/deployments/inventories && ls -tr && pwd '
 alias cdinvzcm='cd ~/checkouts/$pbo/zebra-conf*/inv* && p '

 altf="/home/mwcentral/checkouts/zebra-qa/deployments/inventories/hosts_boeing_alt_v1"
 altgenf="/home/mwcentral/checkouts/zebra-qa/work/hlam/qa_gen_inventory"
 alias alt='egrep "<.*>" /home/mwcentral/checkouts/zebra-qa/deployments/inventories/hosts_boeing_alt_v1 '
 alias vialt='    vi   $altf'
 alias vialtgen=' vi   $altgenf'

 alias cdwww='cd /var/www/html && pwd'
 alias cdcm='cd     ~/checkouts/$pbo/zebra-config-management     && ll && pwd '
 alias cdroles='cd  ~/checkouts/$pbo/zebra-config-management/roles && edbo && ll && pwd '
 alias cdcom='cd    ~/checkouts/$pbo/zebra-common/               && ll && pwd '
 alias cdbo='cd     ~/checkouts/$pbo/zebra-boeing/               && ll && pwd '
 alias cddp='cd     ~/checkouts/$pbo/zebra-datapump/             && ll && pwd '

 alias cdqa='cd     ~/checkouts/zebra-qa/                        && ll && pwd '
 alias cdqar='cd    ~/checkouts/zebra-qa-archive/                && ll && pwd '
 alias cdh_lam='cd  /home/mwcentral/Documents/henry-repo         && ll && pwd '

 alias cdtestb='cd  ~/checkouts/zebra-qa/tests/paint_hangar      && ll && pwd '
 alias cdtestn='cd  ~/checkouts/zebra-qa/tests/nfl               && ll && pwd '
 alias cdtestj='cd  ~/checkouts/zebra-qa/tests/sim_nfl_reports   && ll && pwd '
 alias cdtestl='cd  ~/checkouts/zebra-qa/tests/sim_lms/          && ll && pwd '
 alias cdtest='cd   ~/checkouts/zebra-qa/tests                   && ll && pwd '
 alias cd01='cd     ~/checkouts/zebra-qa/tests/paint_hangar/01_alarm_status ;p'
 alias cdn01='cd    ~/checkouts/zebra-qa/tests/nfl/01_tracker_line ;p'

 alias cdsim='cd    ~/checkouts/zebra-qa/simulation/            && ll && pwd '
 alias cdsimj='cd   ~/checkouts/zebra-qa/simulation/nfl_reports && ll && pwd '
 alias cdsiml='cd   ~/checkouts/zebra-qa/simulation/lms*        && ll && pwd '

 alias cdsl='cd     ~/checkouts/zebra-qa/scripts_lib            && ll && pwd '
 alias cdrt='cd     ~/checkouts/zebra-qa/scripts                && ll && pwd '
 alias vicfg='vi    ~/checkouts/zebra-qa/tests/paint_hangar/01_alarm_status/run_test.conf'
 isemp () { ext=$1; find ./ -empty -name *$ext |grep $ext ; }
 istgn () { if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; ssh zadmin@$ip " ls /opt/zebra/zebra*nfl*; hostname -vI " ; }
 alias cdarc='cd ~/checkouts/zebra-qa-archive/ ; tree *|tail -n90; cd test_run; isemp log; isemp csv '
 #alias cdarc='cd ~/checkouts/zebra-qa-archive/ ; tree *|tail -n90; cat test_run/test_output/deploy_summary.txt|grep -C1 -E "parent:.*:[0-9,a-f,A-F]{7}|changeset:.*:[0-9,a-f,A-F]{7}|Release:|Tip|Summary|zebra" ; pwd;cd test_run; isemp log; isemp csv '
 
 alias cdlog='cd ~/logs;pwd  '
 alias lastlog='cdlog; ls -latr|tail;pwd'
 alias lastfile='ls -1 -t * | head -1'
# rename the last file: $ mv `ls -1 -t *.txt | head -1` whatever.txt

lastchars () { filename=$1 ; awk '{printf("%s\n",substr($0,length($0)- 3))}' $filename ; }

# Interactive operation...
 alias rm='rm -i'
 alias cp='cp -i'
 alias mv='mv -i'

# Default to human readable figures
 alias df='df -h'
 alias dusk='pwd; du -sk'
 alias dush='pwd; du -sh'

# Misc :)
 #alias less='less -r'                          # raw control characters
 #alias whence='type -a'                        # where, of a sort
 #export GREP_COLOR="1;32"
 alias grepstrong='GREP_COLOR="1;34;46" \grep --color'
 alias grep=' grep  --color=auto'              # show differences in colour
 alias egrep='egrep --color=auto'              # show differences in colour
 alias fgrep='fgrep --color=auto'              # show differences in colour
 alias clr='printf "\033c"'                    # clear screen
 alias catcolor='egrep --color -C1 [a-z]+ '

# Some shortcuts for different directory listings
 alias a='alias'
 alias c='cat  '
 alias d='date '
 alias e='echo '
 alias f='finger'
 alias h='history'
 alias i=' ip r | cut -f12 -d" " '
 alias m='more'
 alias n='hostname -vI '
 alias p='pwd; ls -l'
 alias py='python '
 alias u='cd          ..;ls; echo Current_dir is `pwd` '
 alias cdu='cd        ..;ls; echo Current_dir is `pwd` '
 alias cdu2='cd    ../..;ls; echo Current_dir is `pwd` '
 alias cdu3='cd ../../..;ls; echo Current_dir is `pwd` '

 alias l.='ls -ld .* '
 alias lh='ls -tra | egrep "^\."'
 #alias lhid='  diff <(ls) <(ls -a) '
 alias ls='ls -hF --color=tty'                 # classify files in colour
 #alias lf='ls -ltra | egrep -v "^d" '
 alias ldir='ls -ltra | egrep "^d" '
 alias llsd='sudo find ./ -type d -exec du -sb {} \; | sort -g '
 alias dir=' sudo find ./ -type d -ls '
 #alias dir2='ls --color=auto --format=vertical'
 #alias dir3='ls --color=auto --format=long'
 alias ll='ls -l'  
 alias lR='ls -R'                              # all but . and ..
 alias llR='ls -lR'
 alias l='ls -CF'  
 alias llt='ls -lt'
 alias llr='ls -ltr'
 alias llrr='ls -ltr|tail '
 alias lla='ls -ltra'
 alias lls='ls -s '
 alias pingf='ping -a -c 2 -s.2 '
 alias pingn='ping -a -n 2      '
 alias ht='history|tail '
 alias t='tail'
 #alias t='type'

 alias vihostname='sudo vi /etc/sysconfig/network '
 alias nwr='/etc/init.d/network restart; echo   Restarted_network_$(date) '
 # genent hosts 10.21.2.30
 alias vihosts='vi /cygdrive/c/Windows/System32/drivers/etc/hosts '
 alias cddt="cd    /cygdrive/c/Users/hlam/Desktop   ;p"
 alias cddl="cd    /cygdrive/c/Users/hlam/Downloads ;p"
 alias cdmd="cd    /cygdrive/c/Users/hlam/Documents/;p"
 alias cdmw="cd    /cygdrive/c/Users/hlam/Documents/MW/;p"
#alias cdljv='cd   /cygdrive/c/Users/hlam/Documents/MW/NFL_json/qa/tools/json_validator;p'
 alias cdpy='cd    /cygdrive/c/Python27/mws_py  ;p'
 alias cdnd='cd    /cygdrive/n/Software/MotionWorks ; p '
 alias cdM='cd     /cygdrive/m/Data/MotionWorks/mws_staging && ls -lsh && pwd'
 alias cdZ='cd     /cygdrive/z/Data/MotionWorks/mws_staging && ls -lsh && pwd'

 alias cdm='cd /mnt/windows/Data/MotionWorks/mws_staging && ls -lsh && pwd'

function mkdir2 { mkdir -p "$1" && cd "$1" && pwd ; }
cd2 ()          { folder=$1; cd $folder ; ls -l ; pwd  ; }
frep1 () { c=$* ; while sleep 1; do date; $c; echo ; done; }
frep ()  { c=$* ; while (true)   do date; $c; echo -e "($c)...";echo ;sleep 5; done  ; }
alias repeatls=' watch -t ls '
#alias cksocket=' frep ss '

ffiles () { for f in ./* ; do $* $f; done ; }
fdirs ()  { for d in ./* ; do pushd $d; pwd; $* ; popd; echo; done ; }

function my_ip() # Get IP adresses.
{
    #MY_IP=$(/sbin/ifconfig ppp0 | awk '/inet/ { print $2 } ' |    sed -e s/addr://) ;
    #MY_ISP=$(/sbin/ifconfig ppp0 | awk '/P-t-P/ { print $3 } ' |  sed -e s/P-t-P://) ;
    MY_IP=$(/sbin/ifconfig | awk '/inet/ { print $2 } ' | sed -e s/addr://) ;
    MY_ISP=$(/sbin/ifconfig | awk '/P-t-P/ { print $3 } ' | sed -e s/P-t-P://) ;
}
function ii()   # Get current host related info.
{
    echo -e "\nYou are logged on ${RED}$HOST" ;
    echo -e "\nAdditionnal information:$NC " ; uname -a ;
    echo -e "\n${RED}Users logged on:$NC " ; w -h ;
    echo -e "\n${RED}Current date :$NC " ; date ;
    echo -e "\n${RED}Machine stats :$NC " ; uptime ;
    echo -e "\n${RED}Memory stats :$NC " ; free ;
    my_ip 2>&- ;
    echo -e "\n${RED}Local IP Address :$NC" ; 
    echo ${MY_IP:-"Not connected"} ;
    echo -e "\n${RED}ISP Address :$NC" ; echo ${MY_ISP:-"Not connected"} ;
    #echo -e "\n${RED}Open connections :$NC "; netstat -pan --inet;
    echo "DNS IPs are: ";
    cat /etc/resolv.conf ;
}
 alias iig='ii |egrep -A2 "User|IP" '
function fbkup() {   
    DateTimeStamp=$(date '+%Y.%m.%d_%H:%M:%S')  ; 
    #DateTimeStamp=$(date '+%d_%m_%y_%H_%M')  ; 
    ip=$(ifconfig | grep Bcast | awk -F: '{print $2}'| awk -F" " '{print $1}')
    Original=$1 ; 
    FileName=$(basename $Original)  ; 
    Directory=$(dirname $Original)  ; 
    cp -rfp $Original ${Directory}/${ip}_${DateTimeStamp}_${FileName} ;   
}   

# echo {A,C,T,G}{A,C,T,G}{A,C,T,G} //Print all possible 3mer DNA sequence combinations
#fbakcp () { cp filename{,.bak} ; }
fbak () { cp -rfp $1 ./$(date '+%Y.%m.%d_%H:%M')_$1 ;}
fori () { ls -l;cp -rfp $1 $1.ori; ll ;}

function tl {
    #LOGDIR="~/checkouts/zebra-qa-archive/archive"
    case "$1" in
	#"aperr")	file=`ls -tr $LOGDIR/ | tail -1` ;;
	#l*)		file="`ls -tr $LOGDIR/ | tail -1`" ;;
	#r*)		file="$LOGDIR/resizer.log" ;;
	yu*)		file="/var/log/yum.log" ;;
	supd*)		file="/var/log/supervisor/supervisord.log" ;;
	*) echo "default" ;;
    esac
    echo "last log folder: $file"
    tail -50f $file
    #$2 $3 $4  $file
}
extract () {
   if [ -f $1 ] ; then
       case $1 in
        *.tar.bz2)      tar xvjf $1 ;;
        *.tar.gz)       tar xvzf $1 ;;
        *.tar.xz)       tar Jxvf $1 ;;
        *.bz2)          bunzip2 $1 ;;
        *.rar)          unrar x $1 ;;
        *.gz)           gunzip $1 ;;
        *.tar)          tar xvf $1 ;;
        *.tbz2)         tar xvjf $1 ;;
        *.tgz)          tar xvzf $1 ;;
        *.zip)          unzip $1 ;;
        *.Z)            uncompress $1 ;;
        *.7z)           7z x $1 ;;
        *)              echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
}
 #alias tarc='echo arg_f.tar_f; tar czf ‘
 #alias tart='echo arg_f.tar; tar tzf '
 #alias tarx='echo arg_f.tar; tar xzf '
 alias tarup="tar -zcf"
 alias tardown="tar -zxf"
cpwithtar () { src=$1; des=$2; cd $src ; tar cvf - ./* | (cd $des ; tar xvf - ) ; }
 alias vi='vim'
 alias vip='vim -p '
 alias vic='vi ~/.bashrc'
 alias soc='source ~/.bashrc; a|wc '
vis () { pattern=$2; filename=$1; vi +/$pattern $filename  ; }
#fvin () { vi +$1 $2  ; }

h2d () { echo $((0x$1)) ; }
d2h () { printf '%x\n' $1 ; }
#          python -c "print int('c0ffee'    , 16)"
#          python -c "print int('12648430  ', 10)"
#pyh ()  { python -c "import $1;                print help($1)" ; }
pyh ()   { python -c "help( '$1' )" ; }
pyhq ()  { echo q | pyh $1 ; }
pydoc () { python -m pydoc $1 ; }
pyd ()   { python -c "import $1;                print  dir($1)" ; }
#platf () { python -c "from sys import platform; print platform " ; } 
fcsv2json () { python -c "import csv,json;      print json.dumps(list(csv.reader(open('$1'))), sort_keys=True, indent=4, separators=(',', ': ') )" ; }
alias pjson='python -m json.tool'
# python -c "import sys; print ''.join(x.capitalize() for x in sys.stdin)"  < names.txt

# python -m timeit "'-'.join(str(n) for n in range(100))"
# subtitute $1 with $2: () { perl -p -i -e 's/$1/$2/g' $3 $4 $5 $6 ; }
# print only matched item: echo "hallo 123 kadflsdkal" | perl -ne '/(\d+)/ && print "$1\n";'# 123
# find . -type d -empty -exec touch {}/.ignore \; 
#findOlder () { find . -mmin -$((($(date "+%s") - $(stat -c %Y $1))/60)) -type f ; }
# find /path/to/files* -mtime +5 -exec rm {} \;

 alias C2T='ip=10.21.2.30     ; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C228='ip=10.21.2.28    ; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C227='ip=10.21.2.27    ; echo $ip; scp -r    ~/.bashrc mwcentral@$ip:~ '
 alias C292='ip=192.168.30.92 ; echo $ip; scp -r    ~/.bashrc mwcentral@$ip:~ '
 alias C206='ip=192.168.30.206; echo $ip; scp -r    ~/.bashrc mwcentral@$ip:~ '
 alias C207='ip=192.168.30.207; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C204='ip=192.168.30.204; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C205='ip=192.168.30.205; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C287='ip=192.168.30.87 ; echo $ip; scp -r    ~/.bashrc mwcentral@$ip:~ '
 alias C2169='ip=192.168.30.169;echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C29='ip=10.21.36.9     ; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C210='ip=10.21.36.10   ; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C27='ip=10.21.36.7     ; echo $ip; scp -r    ~/.bashrc mwcentral@$ip:~ '
 alias C253='vmc=10.21.2.53   ; echo $vmc; scp -r    ~/.bashrc mwcentral@$vmc:~ '
 #alias C2con='ip=10.0.3.131   ; echo $ip; scp -r    ~/.bashrc mwcentral@$ip:~ '
 #alias C2noc='ip=10.0.3.130   ; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 #alias C2tgt='ip=10.0.3.129   ; echo $ip; scp -r    ~/.bashrc    zadmin@$ip:~ '
 alias C2A='C2T; C204; C205; C206; C207; C29; C210; C27; C287; C2169; C292; C253 '                                  

 alias c2l='scp -r mwcentral@10.21.2.29:~/.bashrc    ~/ '
fl2c () { src=$1; to_path=$2; scp -r $src  mwcentral@10.21.2.29:$to_path ; }
fl2t () { src=$1; to_path=$2; scp -r $src     zadmin@10.21.2.30:$to_path ; }


### Aliases / Functions work with pipeline:

#headft () { awk -v m=$1 -v n=$2 'NR>=$m && NR<=$n'  $3  ; }
 alias xhead='xargs head'
 alias xcat=' xargs cat'
 alias xlist='xargs ls -ltra '
 alias tee2=' tee ./tee_$(date +%Y.%m.%d_%H:%M).txt '
 # output to 2 files: my_command | tee -a /some/file > /some/other/file

 #alias sortu='sort|uniq -c '

 alias cuts=" cut -d \" \"  "
#alias cutst="cut -d \"*\"  "
#alias cute=" cut -d \"!\"  "
 alias cutd=" cut -d \".\"  "
 alias cutb=" cut -d \"#\"  "
#alias cuta=" cut -d \"@\"  "
#alias cutam="cut -d \"&\"  "
 alias cutp=" cut -d \"|\"  "
#alias cutpc="cut -d \"%\"  "
 alias cut2c="cut -d \":\"  "
 alias cutsc="cut -d \";\"  "
 alias cutff="cut -d \"/\"  "

 alias cutc=" cut -d \",\"  "
 alias ducc=' cut -d"," -f'
awkfno () { awk         -F"," '{print $'$1'}'; }
fduc   () { awk -v n=$1 -F"," '{print $n }'  ; }
fmax   () { awk -v n=$1 -F"," 'BEGIN {max = 0} {if ($n>max) max=$n} END {print max}' ; }
#fmax7 () { awk -F"," 'BEGIN {max = 0} {if ($7>max) max=$7} END {print max}' ; }
# avg: awk '{sum=sum+$1} END {print sum/NR}

fduc1 () { awk  '{print $1}'  ; }
 alias lkh='cat ~/.ssh/known_hosts | fduc1 '

rmdup () { awk '!($0 in array) { array[$0]; print }' ; }
 #s_join ()  { echo $@ | tr ' ' '_'  ; }
 alias rmblank='sed "/^$/d;s/^[ \t]*//;s/[ \t]*$//" '
 alias rmbline='sed "/^$/d" '
 alias a_1line='grep -n -- "-1"'
 alias a1line=' awk -vORS=" " 1 $1 '
 alias anline=' sed -e  "s/,/\n/g" | cat '
catln () { fileName=$2 ; sed -n "$1p" $fileName ; }
# alias ge1='sed -e 1,/ERROR/d |head '
#fge1 () { grep -B2 ERROR $1 |head -3 ; cat -n $1 | sed -e 1,/ERROR/d |head ;}

strUC () { echo $1 | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'   ;}
strLC () { echo $1 | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'   ;}

 alias cloneqa='cd ~/checkouts/; hg clone https://bitbucket.org/bobkuehne/zebra-sj zebra-qa ; date; p '

 alias yumgoodstuff='yes|sudo yum install finger;yes|sudo yum install kdiff3; yes|sudo yum install tree;'
 alias tlyum='xterm -title tail_yum_log -e sudo tail -50f /var/log/yum.log & '
 #alias cdyrd='cd /etc/yum.repos.d; p '
#fgy  ()   { grep $* ~/yum_repos/yli_072814.txt ; }

fgb  ()   { grep -i $1 $2 $3 $4  ~/.bashrc ;}
fgh  ()   { HISTTIMEFORMAT=%c ; history | grep $* |tail -20 ; }
# print the last "cp" cmd: !cp:p
fgc  ()   { grep -inr $* ~/config_file ; }
fgpy ()   { grep -inrH $* /cygdrive/c/Python27/* ; }
#fgei ()   { grep -iEn "fail|error" $* ; }
fgl  ()   { cd ~/logs; ls -tr |tail -1|xargs tail -f |grep -iE "fail|error|FATAL:|TASK:" ; }
ffg  ()   { sudo find ./ -name $1 -exec grep -iH $2 {} \; ;}
fkp  ()   { pgrep -f $1 ;pkill $1    ; }
fgserv () { chkconfig|grep $1 ; }
fgalt    () { cd ~/checkouts/zebra-qa/deployments/inventories && egrep -C1 $*  hosts_boeing_alt_v1 ; }
fgaltgen () { cd ~/checkouts/zebra-qa/work/hlam/ && egrep -C1 $*  qa_gen_inventory ; }

ftee1 ()  { tee ~/logs/$(date '+%Y.%m.%d_%H.%M')_$1.log ; }

# alias rstart='cdscri; timeout 20 bash start.sh'
# alias rsa='cdscri; timeout 20 bash start_standalone.sh /opt/zebra/zebra-boeing/common/boeing_standalone.config /opt/zebra/zebra-boeing/common/boeing_standalone_tag_positions.csv  '

ftrk1a  () { t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; python run_test_tracker.py -t  01a_tracker_rnd_0.7 -m zadm@$ip |ftee1 trk1a_$ip; echoe ;t2 ;echo "Pls cdarc to check..." ; }
ftrk1c  () { t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; python run_test_tracker.py -t  01c_tracker_10 -m zadmin@$ip |ftee1 trk1c_$ip; echoe ;t2 ;echo "Pls cdarc to check..." ; }
ftrk  () { t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then tn=$1; else tn=01_tracker_line ; fi; if [ ! -z $2 ]; then ip=$2; else ip=10.21.2.30 ; fi; python run_test_tracker.py -t $tn -m zadmin@$ip |ftee1 trk_py_$tn_$ip; echoe ;t2 ;echo "Pls cdarc to check..." ; }

t1a="01_alarm_status"
frt   () {  t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi;python run_test_alarm.py   -t 01_alarm_status -m zadmin@$ip   | ftee1 t1a_py_$ip_$pbo ; echoe ;t2 ;echo "Pls cdarc to check..." ;lastlog ; }
frt7  () {  t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; python run_test_alarm.py -t   01_alarm_status  -m  zadmin@192.168.30.207  | ftee1 t1a_py_30.207_$pbo ; echoe ;t2 ;echo "Pls cdarc to check..." ;lastlog ; }

frt02   () {  t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi;python run_test_alarm.py   -t 02_deploy_test  -m zadmin@$ip   | ftee1 t2d_$ip_$pbo ; echoe ;t2 ;echo "Pls cdarc to check..." ;lastlog ; }
frt027   () {  t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then ip=$1; else ip=192.168.30.207 ; fi;python run_test_alarm.py   -t 02_deploy_test  -m zadmin@$ip   | ftee1 t2d_$ip_$pbo ; echoe ;t2 ;echo "Pls cdarc to check..." ;lastlog ; }

fsnr () { t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then tn=$1; else tn=01_basic_json_validation ; fi;python run_test_sim_nfl_report.py   -t $tn   | ftee1 t1a_py_$tn_$pbo ; echoe ;t2 ;echo "Pls cdarc to check..." ;lastlog; }

flms () { t1; echob;cd ~/checkouts/zebra-qa/scripts ; ls; pwd; if [ ! -z $1 ]; then tn=$1; else tn=01_basic_patterns ; fi;python run_test_sim_lms.py   -t $tn   | ftee1 t1a_py_$tn_$pbo ; echoe ;t2 ;echo "Pls cdarc to check..." ;lastlog; }

#frasc () { t1; ansible-playbook -vvv $1 -i $2 -u $3 --skip-tags "common" |tee ~/logs/$(date '+%Y.%m.%d_%H:%M')_$1.log; cat $1; pwd;t2 ; }

 alias updpy='t1; cdrt; python update.py -r $pbo.txt ;cdco; t2  '
fupdpy  () { t1; echob; cdrt; python update.py       -r $1 | ftee1 $1 ; echoe; t2 ; }

 alias depi='  t1; cdrt; python deploy_info.py -c $dbo ; t2  '
 alias dep_='  t1; cdrt; python deploy.py      -c $dbo ; t2  '
fdep () { t1; echob; cdrt; python deploy.py    -c $dbo | ftee1 dep_$pbo ; beep; echoe;  t2 ;  }

 alias catroles='echo $pbo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/common/tasks/main.yml |cat -n ; echo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/mws_core_sw/tasks/main.yml |cat -n ; echo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/ntpd/tasks/main.yml |cat -n ; echo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/supervisor/tasks/main.yml |cat -n ; echo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/boeing/tasks/main.yml |cat -n ; echo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/boeing_p5_p6/tasks/main.yml |cat -n '
 alias catrcomm='echo $pbo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/common/tasks/main.yml|cat -n '
 alias catrmws='echo $pbo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/mws_core_sw/tasks/main.yml|cat -n '
 alias catrsup='echo $pbo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/supervisor/tasks/main.yml|cat -n '
 alias catrboe='echo $pbo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/boeing/tasks/main.yml |cat -n '
fcatrboex () { echo $pbo; egrep "name:|File" ~/checkouts/$pbo/zebra-config-management/roles/$1/tasks/main.yml|cat -n ; }

 alias xssh='xterm -e ssh '

 alias ssh27='ssh  mwcentral@10.21.2.27 '
 alias ssh28='ssh     zadmin@10.21.2.28    '
 alias ssh29='ssh  mwcentral@10.21.2.29     '
 alias ssh30='ssh     zadmin@10.21.2.30 '
 alias sshc=' ssh  mwcentral@10.21.2.29     '
 alias ssht=' ssh     zadmin@10.21.2.30 '

 alias sshcon2128='ssh mwcentral@10.0.2.128'
 alias sshnoc2129='ssh    zadmin@10.0.2.129'
 alias sshtgt2130='ssh    zadmin@10.0.2.130'
 alias sshcon3131='ssh mwcentral@10.0.3.131'
 alias sshnoc3130='ssh    zadmin@10.0.3.130'
 alias sshtgt3129='ssh    zadmin@10.0.3.129'
 alias ssh53='     ssh mwcentral@10.21.2.53'
 alias sshvmc='    ssh mwcentral@10.21.2.53'
 alias sshvmcroot='echo "M1gra1n3!"; ssh      root@10.21.2.53'
 alias sshcontr='  ssh mwcentral@controller'
 alias sshNOC='    ssh    zadmin@NOC       '
 alias sshtarget=' ssh    zadmin@target    '

 #alias ssh20='ssh  mwcentral@10.21.36.20'
 #alias ssh14='ssh     zadmin@10.21.36.14   '
 #alias ssh17='ssh     zadmin@10.21.36.17   '
 alias ssh7='ssh   mwcentral@10.21.36.7'
 alias ssh9='ssh      zadmin@10.21.36.9   '
 alias ssh10='ssh     zadmin@10.21.36.10   '

 alias ssh169='ssh    zadmin@192.168.30.169' 
 alias ssh92='ssh  mwcentral@192.168.30.92    '
 alias ssh206='ssh mwcentral@192.168.30.206  '
 alias ssh207='ssh    zadmin@192.168.30.207     '
 alias ssh204='ssh    zadmin@192.168.30.204     '
 alias ssh205='ssh    zadmin@192.168.30.205     '
 alias ssh87='ssh  mwcentral@192.168.30.87     '

 alias sshb80='ssh  mwcentral@10.120.0.80'
 alias sshb79='ssh     zadmin@10.120.0.79'
 alias sshb05='ssh     zadmin@10.120.0.5'
 alias sshb06='ssh     zadmin@10.120.0.6'
 alias sshbnoc2=' ssh  zadmin@10.120.248.2'
 alias sshbnoc3=' ssh  zadmin@10.120.248.3'
 alias sshbnoc4=' ssh  zadmin@10.120.248.4'
 alias sshbnoc5=' ssh  zadmin@10.120.248.5'
 alias sshb101='ssh    zadmin@10.120.0.101'
 alias sshb7='ssh      zadmin@10.127.255.7'
 alias sshb8='ssh      zadmin@10.127.255.8'
 alias sshb39='ssh     zadmin@10.127.255.39'
 alias sshb40='ssh     zadmin@10.127.255.40'
 alias sshb71='ssh     zadmin@10.127.255.71'
 alias sshb72='ssh     zadmin@10.127.255.72'
 alias sshb103='ssh    zadmin@10.127.255.103'
 alias sshb104='ssh    zadmin@10.127.255.104'

 alias manansible='ansible-doc'
 alias tlall='sudo find /var/log -type f -iregex '.*[^\.][^0-9]+$' -not -iregex '.*gz$' 2> /dev/null | xargs tail -n0 -f  '
 alias serv_all='service --status-all | egrep "postg|ntpd|superv"; chkconfig --list '

 alias cdsupd=' cd /etc/supervisor.d/; ls -l /etc/supervisor.d/mws_nfl.conf; cat -n mws_nfl.conf;p '
 alias supdpid='cd /var/run/; ls -ltra; more supervisord.pid; pwd '
 alias supdtmp='cd /tmp     ; ls -ltra | egrep "^s" ; pwd '
 alias tlsupd=' sudo xterm -title tail_supervisord_log -e tail -100f /var/log/supervisor/supervisord.log & '
 alias supd='        sudo service supervisord status' 
 alias supdr='  date;sudo service supervisord restart' 
 alias supda='  date;sudo service supervisord start' 
 alias supdo='  date;sudo service supervisord stop ' 

 alias sup='    hostname -vI && supervisorctl status && date '
 alias supctl=' date;supervisorctl '
 alias sups='        supervisorctl status'
 alias supsr='  date;supervisorctl restart '
 alias supso='  date;supervisorctl stop all '
 alias supsa='  date;supervisorctl start all '
 alias sups2='  hostname -vI; supervisorctl status; date '

supff () { firefox http://$1:9001/  ; }

 alias ver='(cat /opt/zebra/zebra-common/version.txt && echo ) || (cdpbo && head zebra-common/version.txt && echo ) '
 alias catver='cat /opt/zebra/zebra-common/version.txt ;echo '
 alias depstatus='head /opt/zebra/zebra_deployment_info/deploy_*; ls -l /opt/zebra/zebra_deployment_info/deploy_*; date; echo; echo Version---Saved---in---zebra-common ; cat /opt/zebra/zebra-common/version.txt ;echo;echo ;echo SupervisorCTL---Stat ;supervisorctl status; echo; sudo service postgresql-9.3 status; echo '

 alias pog=" sudo service postgresql-9.3 status"
 alias poga="sudo service postgresql-9.3 start "
 alias pogo="sudo service postgresql-9.3 stop  "

#ftp://ftp.box.com phuser Pa1ntHangar
alias ftpbox='echo "hlam@zebra.com Motion12!"; ftp ftp.box.com '
alias ftpnoczi='ftp://10.120.248.2/Installers/ZebraInterlock/'

fkp  () {   r=`ps -ef | grep $1 | grep -v grep |awk '{print $2}' ` ; if [ ! -z "$r" ]; then sudo kill -9 $r; fi ; }
fkpy () {   ps -ef | grep -E "python" | grep -v grep  | awk  '{print $2}' | xargs kill -9 ; }
fkmw1 () {  ps -ef | grep -E "python|start.sh|start_|standalone.config" | grep -v grep  | awk  '{print $2}' | xargs sudo kill -9 ;  }
fkbo () {   ps -ef | grep -v python2.7| grep -E "python|start.sh|start_|standalone.config|distributor|GUI|notty" | grep -v grep  | awk  '{print $2}' | xargs sudo kill -9 ;  }
fknfl () {  ps -ef | grep -v python2.7| grep -E "python|start.sh|start_|standalone.config|distributor|GUI|notty|nfl|mws" | grep -v grep  | awk  '{print $2}' | xargs sudo kill -9 ;  }
alias kmw=' fkbo ; fknfl'

 #alias ckdp='  date; ps -ef |grep -E "python|dist" '
 alias ckpy='  date; ps -ef|grep python| grep -v grep|cat -n  '
 alias cknfl=' ps -ef|grep -vE "grep|python2.7"| grep -E "python|nfl|mws|supervisor|noc|venue|gameclock-server|play-server|entity-server|roster-server|http-server|config_monitor"|cat -n '
 alias cksup=' date; ss; ps -ef|grep -E "supervisor|gameclock-server|play-server|entity-server|roster-server|http-server|config_monitor|tracker-|distributor-p|alarm-p|to_nfl_realtime|distributor-i|to-redis-"|grep -v grep|cat -n '
 #service supervisord status |cat -n; netstat -vatn; 
 alias ckmw='  while (true) do date; ss; ps auxf|grep -v python2.7| grep -iE "sshd|python|start.sh|start_|standalone.config|distrib|GUI|notty|supervisor|mws|nfl|noc|venue|gameclock-server|play-server|entity-server|roster-server|http-server|config_monitor"|grep -v grep|cat -n  ;ps auxef|wc; echo "  "; sleep 5 ; done;'

dates () { t=$1; echo $t " == " `date --date=@$1`   ; }
dateu () { t=$1; echo $t " == " `date -d "$t" +%s ` ; }
 alias t__s='date "+%FT%T"'
 alias t1='date; starttime=$(date +"%s")'
 alias t2='date; echo seconds=$(($(date +"%s")-$starttime)) | egrep "=[0-9]+" '
ftiktoc () { t1; $* ; t2 ; }
# time t=$(cat 3min.csv| cut -d',' -f1) ;  time t=$(cat 3min.csv| awk -F ',' '{print $3}' ); or echo $line, with line=1,hai, ba, 4, 5

 alias echob=' echo "*** BEGIN_at: `date` " '
 alias echoe=' echo "*** END_at: `date` " '

 alias echodate=' echo "fsettimeCentos `date '+%m%d%H%M%y'`" '
fsettimeCentos () { echo "time format mmddHHMMyyyy"; sudo  rm /etc/localtime; sudo ln -s /usr/share/zoneinfo/PST8PDT /etc/localtime; sudo date $1  ; sudo hwclock --systohc; sudo hwclock; echo "*** DONE script run at `date`" ; }

 alias crlf='file `find ./` |grep CRLF '
 #alias grepbincrlf='grep  -IUrl  $'\r' ./ '    
fcrlf () { file `find ./ -name *.$1 ` |grep CRLF ; }
fconvertcrlf () { crlf|awk -F: '{print $1}'|xargs dos2unix; }

rtbu () { cd ~/checkouts/zebra-qa; hg status | awk '/~$/  {print $2}' | xargs rm ;  }
rpyc () { cd ~/checkouts/zebra-qa; hg status | awk '/pyc/ {print $2}' | xargs rm ; } 

#for i in `grep -r "restart postgresql" * | cut -d":" -f1`; do hg parents $i; done;
 #hgpa () { pwd; for i in $*; do ls $i; hg parents $i|grep changeset; echo;done ; }
 hgpa () { for i in $*; do echo `hg parents $i|grep changeset | cut -d: -f2,3`_`ls $i`>> temp 2>/dev/null; echo;done ; sort -h temp;pwd ; rm -f temp; }
 alias hgpar='    hg parents '
 alias hgid='     hg id '
 #alias hgid='    hghelp id|grep -C3 local ; echo ; hg id '
 alias hghelp='   hg -v help '
 alias hgheads='  hg heads '
 alias hgbr='     hg branches'
 alias hgtg='     hg tags -v   '
 alias hgverify=' hg verify '
 alias hgversion='hg version '
 alias hgroot='   hg root '
 alias curtag='   hg showconfig |grep default ; hgtg '
 alias curtags='  cat -n `hg root`/.hg/tags.cache '
 alias hgpath='   hg path ' 
 alias hgg='      hg grep -f -u '
 alias hglocate=' hg locate -f '
 alias hgst='     hg status'
 alias hgcnt='    hg st -A|wc -l'
 alias hglfc='    hg log --style changelog|head -30'
 alias hg2update='echo [Local:`hg tip|grep changeset|cut -d: -f2`] versus [Cloud: `hg incoming|grep change|cut -d: -f2`] '
 alias hg2clone=' hg incoming |grep change|cut -d: -f2'
 alias hg2pull='  hg incoming'
 alias hg2push='  hg outgoing'
 alias hgsu='     hg summary|grep  -E "tip|branch|zebra|parent:.*:[0-9,a-f,A-F]{7}|changeset:.*:[0-9,a-f,A-F]{7}"; echo ___Total_of_Files___ ;hg st -A|wc -l  '
 alias hgti='     hg tip    |grep  -E "tip|branch|zebra|parent:.*:[0-9,a-f,A-F]{7}|changeset:.*:[0-9,a-f,A-F]{7}" '
 alias curtip='   pwd|grep zebra-.*; echo Summary: ; hgsu -C5; echo;hgcnt;echo;  echo Tip: ; hgti -C5'
 alias allrepos=' cdco; for i in bo*; do cd $i;pwd;for j in ze*; do cd $j;pwd;hgcnt;cd ..;done;cd ..;done '
fgetsummary () {  $*; for i in zebra-* ; do cd $i; pwd; hgbr -a; hg su ;hg st -A|wc -l;  hg tip; cd .. ; echo; done ; }
fdissummary () {  for i in zebra-* ; do cd $i; echo $(basename `pwd`): ; hg su|grep -Eho "parent:.*:[0-9,a-f,A-F]{7}" ; echo Total_of_Files:$(hg st -A|wc -l) ; cd .. ; echo; done ; }

 alias bci=' cdqa; echo ___CurTip_CHECK___ ; echo [Local:`hg tip|grep changeset|cut -d: -f2`] versus [Cloud:`hg incoming|grep change|cut -d: -f2`]; echo; hg tip; echo ___Total_of_Files___ ;hg st -A|wc -l ; echo;  echo ___HG_STATUS_CHECK___ ; hg st; echo '
 alias bfci='     echo ___CurTip_CHECK___ ; echo [Local:`hg tip|grep changeset|cut -d: -f2`] versus [Cloud:`hg incoming|grep change|cut -d: -f2`]; echo; hg tip; echo ___Total_of_Files___ ;hg st -A|wc -l ; echo;  echo ___HG_STATUS_CHECK___ ; hg st; echo '

alias big14G='sshpass -p Rosebud1! ssh zadmin@10.127.255.103 "find /home/zadmin/mws_staging/ -size +14G |xargs du -sh" '
alias aplogs='sshpass -p Rosebud1! ssh zadmin@10.127.255.39 "(find /home/zadmin/mws_staging/a* -size +100M |xargs du -sh)  && (find /home/zadmin/mws_staging/P* -size +1G |xargs du -sh) " '
#alias aPlogs='sshpass -p Rosebud1! ssh zadmin@10.127.255.103 "find /home/zadmin/mws_staging/ -name [aP]*.1 |xargs du -sh|egrep -v ^0 " '
#alias aPlogs='sshpass -p Rosebud1! ssh zadmin@10.127.255.103 "find /home/zadmin/mws_staging/ -name [aP]*.1 |xargs du -sh|egrep -v ^0 |xargs tar zcvf /home/zadmin/zebra_support/file.tar | pv -L 1m " '
faPlogs () { ip=$1; sshpass -p Rosebud1! ssh zadmin@$ip "find /home/zadmin/mws_staging/ -name [aP]*.1 |xargs du -sh|egrep -v ^0 " ; }
fti () { ip=$1; cd ~/checkouts/zebra-qa/temp; sshpass -p 'Rosebud1!' scp -o User=zadmin -o StrictHostKeyChecking=no $ip:/opt/zebra/zebra_deployment_info/deploy* . ;head deploy_*; pwd;ls -ltr ;date; }
#[mwcentral@mail mws_staging]$ sshpass -p 'Rosebud1!' ssh zadmin@10.127.255.103 find /home/zadmin/mws_staging -size +14G

 alias cddevpy='  cdqa; cd development/recv_csv;p; cd ../hub-stub/;p '
fscpdevpy () {  cddevpy; if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; scp -r ~/checkouts/zebra-qa/development/recv_csv/recv-* zadmin@$ip:/opt/zebra/zebra-datapump/processors/csv; scp -r ~/checkouts/zebra-qa/development/hub-stub/dart-hub-server.py zadmin@$ip:/opt/zebra/zebra-datapump/hub-stub/dart-hub-server.py ; }
 alias scpdevpy=' cddevpy; if [ ! -z $1 ]; then ip=$1; else ip=10.21.2.30 ; fi; scp -r ~/checkouts/zebra-qa/development/recv_csv/recv-* zadmin@$ip:/opt/zebra/zebra-datapump/processors/csv; scp -r ~/checkouts/zebra-qa/development/hub-stub/dart-hub-server.py zadmin@$ip:/opt/zebra/zebra-datapump/hub-stub/dart-hub-server.py '
 alias scpdevpy7='cddevpy; scp -r ~/checkouts/zebra-qa/development/recv_csv/recv-* zadmin@192.168.30.207:/opt/zebra/zebra-datapump/processors/csv; scp -r ~/checkouts/zebra-qa/development/hub-stub/dart-hub-server.py zadmin@192.168.30.207:/opt/zebra/zebra-datapump/hub-stub/dart-hub-server.py '
 #alias newdevpy=' scp -r hl@10.21.2.29:~/checkouts/zebra-qa/development/recv_csv/recv-* /opt/zebra/zebra-datapump/processors/csv; scp -r hl@10.21.2.29:~/checkouts/zebra-qa/development/hub-stub/dart-hub-server.py /opt/zebra/zebra-datapump/hub-stub/dart-hub-server.py '
 alias newdevpy=' scp -r mwcentral@10.21.2.29:~/checkouts/zebra-qa/development/recv_csv/recv-* /opt/zebra/zebra-datapump/processors/csv; scp -r mwcentral@10.21.2.29:~/checkouts/zebra-qa/development/hub-stub/dart-hub-server.py /opt/zebra/zebra-datapump/hub-stub/dart-hub-server.py '
 alias verdevpy=' cd /opt/zebra/zebra-datapump/processors/csv; pwd | grep csv; ls -l| grep recv; cd /opt/zebra/zebra-datapump/hub-stub/ ; pwd | grep hub-stub; ls -l |grep dart-hub-server.py '
 alias cpdevpy='  sudo cp ~/dart-hub-server.py /opt/zebra/zebra-datapump/hub-stub; sudo cp ~/recv-*.py /opt/zebra/zebra-datapump/processors/csv'

 alias POSTentities='curl -X POST -d @entities_combined_rev14.json -H "Content-Type: application/json" http://127.0.0.1:3122/entities/upload'
 alias GETentities=' curl -X GET http://127.0.0.1:3122/entities '
 alias entitiesDBsize=' curl -X GET http://127.0.0.1:3122/entities | wc -l'
 alias dumpBackup='pg_dump zebra > db.sql'

# PATH C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\Roxio Shared\DLLShared\;C:\Program Files (x86)\Common Files\Roxio Shared\10.0\DLLShared\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;
#C:\Program Files\Java\jdk1.8.0_40\bin;
#C:\Program Files\Internet Explorer;
#C:\Program Files (x86)\Mozilla Firefox;
#C:\Program Files (x86)\Notepad++;
#C:\Program Files (x86)\PyScripter;
#C:\Program Files (x86)\WinSCP
#C:\Program Files (x86)\RealVNC\VNC4
 alias ie='    iexplore.exe '
 alias ff='    firefox.exe '
 alias npp='   notepad++.exe '
 alias pys='   PyScripter.exe '
 alias winscp='WinSCP.exe  '
 alias vnc='   vncviewer.exe'
 alias wex='   explorer /n '
 alias sky=' cd /cygdrive/c/Program\ Files\ \(x86\)/Skype/Phone && ./Skype.exe  & '
 alias skyo='cd /cygdrive/c/Program\ Files\ \(x86\)/Skype/Phone && ./Skype.exe  /shutdown '


# alias cleanoz=' cd /opt; sudo rm -rf /opt/zebra; p; cd /etc/supervisor.d/; sudo rm -rf mws_*.conf; p ' 
# alias cleansup='supso;supdo;date;sleep 30; sups; supd; date '
 alias cleanpipe='cd /etc/init.d/ && ./network restart && cd /tmp && rm -rf mws_ipc*pipe* && ls && pwd '

 alias getclone=' mv zebra-qa zebra-qa-`date '+%Y%m%d_%H%M'` &&  cowsay "Start cloning zebra-qa ..." && hg clone https://bitbucket.org/bobkuehne/zebra-sj zebra-qa '

 alias getclnup='  t1; cd ~/checkouts;ls -tr ; sudo rm -rf zebra-qa; pwd; ls -tr ; cowsay "Start cloning zebra-qa ..." && hg clone https://rodrigogalonso:mw3entral!@bitbucket.org/bobkuehne/zebra-sj zebra-qa ; t2 '

 alias getcln='  t1; cd ~/checkouts;ls -tr ; sudo rm -rf zebra-qa; pwd; ls -tr ; hg clone https://bitbucket.org/bobkuehne/zebra-sj zebra-qa ; t2 '

 alias getzi='  date;date1=$(date +"%s"); cd ~/checkouts;ls -tr ; sudo rm -rf zebra-industrial; pwd; ls -tr ; hg clone https://bitbucket.org/dle7/zebra-industrial  ; date2=$(date +"%s"); diff=$(($date2-$date1)); echo "$(($diff / 60)) minutes and $(($diff % 60)) seconds elapsed." ; pwd ;date '

#checkouts]$ hg clone https://bitbucket.org/dle7/zebra-innovation
#checkouts]$ hg clone https://bitbucket.org/danbuckler/firmware
#checkouts]$ hg clone https://bitbucket.org/danbuckler/mission_planner
#checkouts]$ hg clone https://bitbucket.org/danbuckler/c-check-for-point-in-polygon


 alias vipyn='   vi /cygdrive/c/Python27/mws_py/pynotes.py '

 #alias dftot='df -h --total | awk 'NR==1; END{print}''
 alias dfdu='   cd ~; f="~/Documents/df_dush.txt"; date >> $f; df >> $f; du -sh|grep -v cannot >> $f; echo "+++++++" >> $f; cat $f      '

fFindBigFiles () { if [ ! -z $2]; then s=$2; else s=120M; fi ; from_dir=$1; find $from_dir -size +$s   -ls 2>/dev/null ; }
#fFindBigFiles () { if [ ! -z $2]; then s=$2; else s=120M; fi ; if [ ! -z $1]; then from_dir=$1; else from_dir="./"; fi ; find $from_dir -size +120M -ls 2>/dev/null ; }

 alias cpuinfo='cat /proc/cpuinfo; lscpu '
 alias cputop=' xterm -e top & '
 alias dirsize='xterm -hold -e "du -sh; df " '
 alias psmem10='ps auxf | sort -nr -k 4 | head -10'
 alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
 alias cpuinfo='lscpu'

man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[1;31m") \
		LESS_TERMCAP_md=$(printf "\e[1;31m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[1;32m") \
			man "$@"
}
fman () { cmd=$1; man $cmd | col -b > ~/man_$1.txt; cat -n ~/man_$1.txt; ls -l ~/man_$1.txt  ; }
# alias erc='    echo $?'
# alias bc='     bc -l'
 alias ports='  netstat -tulanp'
 alias gateway='netstat -nr '
 alias dnsgateway='cat /etc/sysconfig/network-scripts/ifcfg-eth0'
 alias dnsip='     cat /etc/resolv.conf'
 alias ipconf='ipconfig /all |egrep --color -C12 "IPv.*|adapter" '
 alias gip='egrep --color -C12 "IPv.*|adapter|addr:[.0-9]*" '

# alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'

 #alias vnctar29=' scp -r hl@10.21.2.29:~/hl/VNC_enable.tar .'
 #alias vnctar207='scp -r zadmin@192.168.30.207:/home/zadmin/hl/VNC_enable.tar .'
 alias vncenable='sudo rpm -ivh VNC-Server-5.2.1-Linux-x64.rpm; sudo vnclicense -add F743B-R22UH-PBGQH-RJ2PQ-H6R9A; sudo service vncserver-x11-serviced start; wait; echo "For target, type in pwd zadmin"; echo "For controller, type in pwd mwcentral"; sudo vncpasswd '

fdiffWeek () { cd /cygdrive/e/GameData;p; if [ ! -d Week$1 ]; then echo should_check_folder... ; wait ; fi ;for f in `ls Week$1`; do ls Week$1/$f; diff Week$1/$f /cygdrive/c/tem/Week$1/$f; done;  }

#zgtd () { t1; f="/cygdrive/m/Analysis/LowBATT/BatteryHistory/$1_$2"; echo "zgrep -a $1 $2" > $f; zgrep -a $1 $2 >> $f; t2 ; }
gtd () { t1; f="/cygdrive/m/Analysis/LowBATT/BatteryHistory/$1_$2"; echo "grep $1 $2" > $f; grep $1 $2 >> $f; t2 ; }

alias bh='cd /cygdrive/m/Analysis/LowBATT/BatteryHistory'
alias s1='cd /cygdrive/m/Analysis/LOGS/Box\ Sync/LOWBATT' 
alias s2='cd /cygdrive/m/Analysis/LOGS/Box\ Sync/LOWBATT/home/zadmin/mws_staging'

 alias xnload='   xterm -e nload & '
 alias nload1000='nload –t 1000'
 alias speedtest='   python speedtest-cli.py --share '
 alias speedtestlog='python speedtest-cli.py --share | ftee1 speedtest_$(hostname -I) '
 alias dlspeedtest=' wget -O speedtest-cli.py https://github.com/sivel/speedtest-cli/raw/master/speedtest_cli.py'
 alias wgetprotobuf='cd /tmp && wget https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.gz && ls -ltr '

 alias beep='echo -en "\007"'

#   Tag format (DART Hub data): 
#       Type, tag_id,    x,    y,    z,  battery,  timestamp,  virtual group ID
#          T,   2011, 13.88, -4.89,  2.74,        0,          0,                 0
#   Entity format: 
#       entity_id,    x,    y,    z,  timestamp, ang, dist, vel, accL, accT

#  $ ssh-keygen .t rsa;  ls .l ~/.ssh/ ;     $ SSH-copy-id  zadmin@z21srl_mt_target.zebra.lan
#  $ ssh-agent bash; $ssh-add ~/.ssh/zadmin   
#  $ ssh-copy-id  zadmin@$ip
# rpm: http://www.cyberciti.biz/faq/rhel-redhat-fedora-opensuse-linux-install-rpmfile-command/
# netstat -a | egrep 'Proto|LISTEN' # netstat -lnptu # lsof -i -n | egrep 'COMMAND|LISTEN'
	#5.1.1.	Epel
	# install and enable epel and remi
	#$ wget  http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
	#$ wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
	#$ sudo  rpm  -Uvh epel-release-6-8.noarch.rpm remi-release-6*.rpm

	# to validate if epel and remi successfully installed 
	#$ sudo ls -1 /etc/yum.repos.d/epel* /etc/yum.repos.d/remi.repo
	#/etc/yum.repos.d/epel.repo
	#/etc/yum.repos.d/epel-testing.repo
	#/etc/yum.repos.d/remi.repo

	# modify [remi] to have the two variables below, set to 1
	# enabled=1
	# gpgcheck=1
	#$ sudo vim /etc/yum.repos.d/remi.repo
	#5.1.2.	System update:
	## Caution: this is a very comprehensive system wide update, so it can take about 30 mins
	#$ sudo yum update  
# service iptables status #for VNC 1.enable, 2.off iptables #iptables -L -v
#listallusers () { python -c 'print "\n".join(line.split(":",1)[0] for line in open("/etc/passwd"))'  ; }
#alias list500users=' ls /home |xargs -i id {}|sort '

# read -p "Do you want to continue (Y/N)?"; [ "$(echo $REPLY | tr [:upper:] [:lower:])" == "y" ] || exit
# if grep -q 'Sum' README.md ; then res=bad; else res=good; fi; echo $res
# psql -A -F ',' -t -c 'select * from tablename;' # postgreSQL CSV output from the CLI

#    % supervisorctl stop all
#    % psql -d zebra_monitor_p1
#    % zebra_monitor_p1=> \dt
# either   % zebra_monitor_p1=>DROP TABLE events;
#    % zebra_monitor_p1=> \dt
# or % zebra_monitor_p1=> SELECT * FROM events WHERE event::json->>'description' LIKE 'LOW BATT';
#    % should backup DB before delete
#    % zebra_monitor_p1=> DELETE FROM events WHERE event::json->>'description' LIKE 'LOW BATT';

# generate 8-letter passwd: cat /dev/urandom|tr -dc 'a-zA-Z0-9'|fold -w 8|head -1                          | python -c "import sys,crypt; stdin=sys.stdin.readline().rstrip('\n'); print stdin;print crypt.crypt(stdin)"
# pssh -h RemoteHosts.txt -P -I < ~/LocalScript.sh 2014-07-14 16:02:12 User: zlemini 1 Up Down # Run a script in parrallel over ssh 
# sudo ntpdate serverip # Synchronize date and time with a server 
# display disks by id, UUID and HW path UUID: tree /dev/disk
# top -c |grep -E "tar|scp"
# top cmd at a remote IP: ssh mwcentral@192.168.30.206 'top -bn2|awk -F, '\''/Cpu/{if (NR>4){print $4}}'\''|awk -F" id" '\''{print 100-$1}'\'
# echo thisIsATest | sed -r 's/([A-Z])/_\L\1/g'
# awk '{if (NR % 2 == 1) print $0}' file.txt
# "\\21S03DATA01\Main\Software\MotionWorks\10 Activities\Agile_Work_List.xlsx"
#[hl]$ man date | col -b > man_date.txt
# find your IP addr: $ curl -s http://checkip.dyndns.org
# frevStrInBASH () { for ((i=${#1}; i>=0; i--)); do printf "${1:$i:1}"; done; echo; }
# [hl]$ su - root -c "pwd;whoami;visudo"
# Replace spaces in filenames with underscores [hl]$ ls | while read file; do mv "${file}" `echo "${file}" | tr ' ' '_'` ; done
#http://alinirimia.com/2013/11/run-commands-in-windows-tested-in-windows-8-and-8-1/
#sudo yum install -y python-requests; echo DONE; python -c "import requests"
# ssh zadmin@10.21.2.30 "python -c 'import time; print time.asctime(), time.asctime(time.gmtime()) ' "
# [zadmin@p3_p4_a mws_staging]$ ls -lshtr /var/log/supervisor/ |awk '{ if ($1 != 0) print $7, $8, $9, "\t", $1, "\t" $10}'
# [zadmin@p3_p4_a mws_staging]$ ls -lshtr /home/zadmin/mws_staging/*.1 |awk '{ if ($1 != 0) print $7, $8, $9, "\t", $1, "\t" $10}'
# ls -lsh /home/zadmin/mws_staging/alarm*.1       |awk '{ if ($1 != 0) print $7, $8, $9, "\t", $1, "\t" $10}'
# ls gets file sizes: ls -lsh /var/log/supervisor/ |awk '{ if ($1 != 0) print $7, $8, $9, "\t", $1, "\t" $10}'
#[mwcentral@mail email]$ (printf "PERM LINKS OWNER GROUP SIZE MONTH DAY HH:MM/YEAR NAME\n" \
#>            ; ls -l | sed 1d) | column -t
# $ for t in 4428 4791 3F1F 3DF6 4423 44D6 3E13 4439 4413 434B 433A 4395 425C 436B 4349 442B 43DD 433F 3E43 4438 3F17 4373 4394 47F6 47F0 466C 4773 3EF2 3F7C 4808 434F 3E49 ; do echo $t; echo; egrep ",[013456789].00000,142"  *$t*.txt  -c; echo; done
# cat A |xargs -i grep {} B|sort -u
# comm sorted_A sorted_B
# \\21nasbuildstore == 192.168.30.240
# \\21nasmwstore    == 192.168.30.243
# C:\> net use M:  /delete
# doskey use240=net use Z: \\21nasbuildstore.cluster-2003.wherenet.com\Public /user:builduser builduser@1
# doskey use243=net use M: \\192.168.30.243\Public /user:builduser builduser@1
# find /?
